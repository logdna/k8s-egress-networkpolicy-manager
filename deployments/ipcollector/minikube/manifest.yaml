---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ipcollector-sa
  namespace: ipegress
  labels:
    app.kubernetes.io/name: k8s_egress_networkpolicy_manager
    app.kubernetes.io/instance: k8s_egress_networkpolicy_manager-ipcollector
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ipcollector
  namespace: ipegress
  labels:
    app.kubernetes.io/name: k8s_egress_networkpolicy_manager
    app.kubernetes.io/instance: k8s_egress_networkpolicy_manager-ipcollector
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get","list", "create", "watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get","list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get","list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ipcollector
  namespace: ipegress
  labels:
    app.kubernetes.io/name: k8s_egress_networkpolicy_manager
    app.kubernetes.io/instance: k8s_egress_networkpolicy_manager-ipcollector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ipcollector
subjects:
  - kind: ServiceAccount
    name: ipcollector-sa
    namespace: ipegress
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: ipcollector
  namespace: ipegress
spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 100%
  selector:
    matchLabels:
      app.kubernetes.io/name: k8s_egress_networkpolicy_manager
      app.kubernetes.io/instance: k8s_egress_networkpolicy_manager-ipcollector
  template:
    metadata:
      labels:
        app.kubernetes.io/name: k8s_egress_networkpolicy_manager
        app.kubernetes.io/instance: k8s_egress_networkpolicy_manager-ipcollector
    spec:
      securityContext:
        runAsUser: 9999
      serviceAccountName: ipcollector-sa
      automountServiceAccountToken: true
      containers:
      - name: ipcollector
        image: ipcollector:latest
        imagePullPolicy: Never
        env:
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: LOGDATEFMT
            value: '%Y-%m-%d %H:%M:%S'
          - name: LOGLEVEL
            value: INFO
          - name: LOGFORMAT
            value: '%(asctime)s %(levelname)-8s %(message)s'
          - name: PYTHONWARNINGS
            value: 'ignore:Unverified HTTPS request'
          - name: STARTUP_DELAY
            value: '0'
          - name: TRANSMIT_MIN_INTERVAL_DELAY
            value: '60'
          - name: TRANSMIT_MAX_INTERVAL_DELAY
            value: '180'
        resources:
          requests:
            cpu: 10m
          limits:
            memory: 150Mi
      restartPolicy: Always