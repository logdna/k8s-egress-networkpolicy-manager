---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ipcurator-sa
  namespace: ipegress
  labels:
    app.kubernetes.io/name: k8s_egress_networkpolicy
    app.kubernetes.io/instance: k8s_egress_networkpolicy-ipcurator
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: ipcurator
  namespace: ipegress
  labels:
    app.kubernetes.io/name: k8s_egress_networkpolicy
    app.kubernetes.io/instance: k8s_egress_networkpolicy-ipcurator
rules:
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["get","list", "create", "watch"]
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get","list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get","list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ipcurator
  namespace: ipegress
  labels:
    app.kubernetes.io/name: k8s_egress_networkpolicy
    app.kubernetes.io/instance: k8s_egress_networkpolicy-ipcurator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: ipcurator
subjects:
  - kind: ServiceAccount
    name: ipcurator-sa
    namespace: ipegress
---
apiVersion: v1
kind: Service
metadata:
  name: ipcurator
  namespace: ipegress
spec:
  selector:
    app.kubernetes.io/instance: k8s_egress_networkpolicy-ipcurator
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
---
kind: Service
apiVersion: v1
metadata:
  name: ipcurator-nodeport
  namespace: ipegress
spec:
  type: NodePort
  ports:
  - port: 5000
  selector:
    app.kubernetes.io/instance: k8s_egress_networkpolicy-ipcurator
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ipcurator
  namespace: ipegress
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: k8s_egress_networkpolicy
      app.kubernetes.io/instance: k8s_egress_networkpolicy-ipcurator
  template:
    metadata:
      labels:
        app.kubernetes.io/name: k8s_egress_networkpolicy
        app.kubernetes.io/instance: k8s_egress_networkpolicy-ipcurator
    spec:
      securityContext:
        runAsUser: 10000
      serviceAccountName: ipcurator-sa
      automountServiceAccountToken: true
      containers:
      - name: liveness
        image: k8s.gcr.io/liveness
        args:
        - /server
        livenessProbe:
          httpGet:
            path: /health
            port: 5000
          initialDelaySeconds: 3
          periodSeconds: 3
      - name: curl-misc
        image: curlimages/curl
        imagePullPolicy: IfNotPresent
        command: ["/bin/ash"]
        args: ["-c", "sleep 60; while true; do curl -s http://localhost:5000/v1/periodic/calculate_efficient_cidrs; curl -s http://localhost:5000/v1/periodic/get_public_ip_address; curl -s http://localhost:5000/v1/periodic/getpods; sleep 300; done"]
      - name: ipcurator
        image: logdna/ipcurator:784f521
        env:
          - name: LOGDATEFMT
            value: '%Y-%m-%d %H:%M:%S'
          - name: LOGLEVEL
            value: INFO
          - name: LOGFORMAT
            value: '%(asctime)s %(levelname)-8s %(message)s'
          - name: RESPONSE_NOTE
            value: 'egress ip addresses are subject to change at any time'
          - name: REVEAL_VERSION_ON_INDEX_PAGE
            value: 'true'
        ports:
        - containerPort: 5000
        resources:
          requests:
            cpu: 20m
          limits:
            memory: 512Mi
      restartPolicy: Always